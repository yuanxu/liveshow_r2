#pragma once
#include "ace/Basic_Types.h"

class MediaHeader
{
public:
	MediaHeader(void);
	~MediaHeader(void);

	int len_;
	char* data_;
	
	void set_data(const char* pData,size_t len);
	
	void clear();

	ACE_UINT32	get_chunk_size();
	ACE_UINT32	get_bit_rate();

	size_t get_segment_size();
private:
	size_t find(const unsigned char p[]);
};

/*
asf header object
*/

/* ASF object id */
const unsigned char asf_headObjID[16] =
{0x30 ,0x26 ,0xB2 ,0x75 ,0x8E ,0x66 ,0xCF ,0x11 ,0xA6 ,0xD9 ,0x00 ,0xAA ,0x00 ,0x62 ,0xCE ,0x6C};

const unsigned char asf_dataObjID[16] =
{0x36 ,0x26 ,0xB2 ,0x75 ,0x8E ,0x66 ,0xCF ,0x11,0xA6 ,0xD9 ,0x00 ,0xAA ,0x00 ,0x62 ,0xCE ,0x6C};

const unsigned char asf_filePropObjID[16] =
{0xA1 ,0xDC ,0xAB ,0x8C ,0x47 ,0xA9 ,0xCF ,0x11,0x8E ,0xE4 ,0x00 ,0xC0 ,0x0C ,0x20 ,0x53 ,0x65};

const unsigned char asf_streamPropObjID[16] =
{0x91 ,0x07 ,0xDC ,0xB7 ,0xB7 ,0xA9 ,0xCF ,0x11,0x8E ,0xE6 ,0x00 ,0xC0 ,0x0C ,0x20 ,0x53 ,0x65};

const unsigned char asf_audioStreamObjID[16] =
{0x40 ,0x9E ,0x69 ,0xF8 ,0x4D ,0x5B ,0xCF ,0x11 ,0xA8 ,0xFD ,0x00 ,0x80 ,0x5F ,0x5C ,0x44 ,0x2B};

const unsigned char asf_videoStreamObjI[16] =
{0xC0 ,0xEF ,0x19 ,0xBC ,0x4D ,0x5B ,0xCF ,0x11 ,0xA8 ,0xFD ,0x00 ,0x80 ,0x5F ,0x5C ,0x44 ,0x2B};

const unsigned char asf_streamBitrateObjID[16] =
{0xCE ,0x75 ,0xF8 ,0x7B ,0x8D ,0x46 ,0xD1 ,0x11,0x8D ,0x82 ,0x00 ,0x60 ,0x97 ,0xC9 ,0xA2 ,0xB2};

//-----------------------------------
/* Offsets of some critical information in ASF header */
#define HDR_TOTAL_SIZE_8               	0x28
#define HDR_NUM_PACKETS_8              	0x38
#define HDR_FINE_TOTALTIME_8           	0x40
#define HDR_FINE_PLAYTIME_8            	0x48
#define HDR_PLAYTIME_OFFSET_4          	0x50
#define HDR_FLAGS_4                    	0x58
#define HDR_ASF_CHUNKLENGTH_4          	0x5c
#define HDR_ASF_CHUNKLENGTH_CONFIRM_4  	0x60
#define DATSEG_HDR_SIZE 		0x32
#define DATSEG_NUMCHUNKS_4 		0x28
#define HDR_ASF_BITRATE			0x64

